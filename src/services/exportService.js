// src/services/exportService.js
import * as XLSX from 'xlsx';
import { saveAs } from 'file-saver';

class ExportService {
  constructor() {
    this.version = '2.0.0';
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Excel —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤
  exportToExcel(sheets, filename = 'eps-export') {
    try {
      // –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
      const totalRecords = sheets.reduce((sum, sheet) => sum + (sheet.data?.length || 0), 0);
      if (totalRecords === 0) {
        console.warn('‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
        return false;
      }

      console.log('üì§ –ù–∞—á–∞–ª–æ —ç–∫—Å–ø–æ—Ä—Ç–∞:', sheets.length, '–ª–∏—Å—Ç–æ–≤,', totalRecords, '–∑–∞–ø–∏—Å–µ–π');

      const wb = XLSX.utils.book_new();

      // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –ª–∏—Å—Ç
      sheets.forEach((sheet, index) => {
        if (sheet.data && sheet.data.length > 0) {
          const ws = XLSX.utils.json_to_sheet(sheet.data);
          const sheetName = sheet.name || `–õ–∏—Å—Ç${index + 1}`;
          XLSX.utils.book_append_sheet(wb, ws, sheetName);
          console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ª–∏—Å—Ç "${sheetName}" —Å ${sheet.data.length} –∑–∞–ø–∏—Å—è–º–∏`);
        }

      });
      if (wb.SheetNames.length === 0) {
        console.error('‚ùå –í –∫–Ω–∏–≥–µ –Ω–µ—Ç –ª–∏—Å—Ç–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
        return false;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
      const metadata = [{
        '–°–∏—Å—Ç–µ–º–∞': '–ï–†–° –ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–í–µ—Ä—Å–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞': this.version,
        '–î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞': new Date().toLocaleString('ru-RU'),
        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å': '–°–∏—Å—Ç–µ–º–∞',
        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤': sheets.length,
        '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π': sheets.reduce((sum, sheet) => sum + (sheet.data?.length || 0), 0)
      }];
      
      const metadataWs = XLSX.utils.json_to_sheet(metadata);
      XLSX.utils.book_append_sheet(wb, metadataWs, '–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ');

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
      const dateStr = new Date().toISOString().split('T')[0];
      XLSX.writeFile(wb, `${filename}-${dateStr}.xlsx`);
      
      console.log(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: ${sheets.length} –ª–∏—Å—Ç–æ–≤, ${sheets.reduce((sum, sheet) => sum + (sheet.data?.length || 0), 0)} –∑–∞–ø–∏—Å–µ–π`);
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Excel:', error);
      this.fallbackExport(sheets, filename);
      return false;
    }
  }

  // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è –µ–¥–∏–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –¥–∞–Ω–Ω—ã—Ö
  exportData(data, sheetName = '–î–∞–Ω–Ω—ã–µ', filename = 'eps-export') {
    const sheets = [{
      name: sheetName,
      data: Array.isArray(data) ? data : []
    }];
    return this.exportToExcel(sheets, filename);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã
  exportScheduleData(data, filename = 'eps-schedule') {
    return this.exportData(data, '–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã', filename);
  }

  // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV
  fallbackExport(sheets, filename) {
    if (!sheets || sheets.length === 0) return;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç –¥–ª—è CSV —ç–∫—Å–ø–æ—Ä—Ç–∞
    const data = sheets[0]?.data || [];
    if (data.length === 0) return;
    
    const headers = Object.keys(data[0]);
    const csvContent = [
      headers.join(','),
      ...data.map(row => headers.map(header => {
        const value = row[header];
        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å –∑–∞–ø—è—Ç—ã–º–∏
        if (typeof value === 'string' && (value.includes(',') || value.includes('"'))) {
          return `"${value.replace(/"/g, '""')}"`;
        }
        return value;
      }).join(','))
    ].join('\n');

    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    saveAs(blob, `${filename}-${new Date().toISOString().split('T')[0]}.csv`);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞
  exportDashboardData(dashboardData, todayStats) {
    const sheets = [
      {
        name: '–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏',
        data: [
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–í—ã—Ä—É—á–∫–∞',
            '–ü–ª–∞–Ω (—Ä—É–±)': dashboardData?.revenue?.plan || 0,
            '–§–∞–∫—Ç (—Ä—É–±)': dashboardData?.revenue?.fact || 0,
            '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (%)': dashboardData?.revenue?.plan ? 
              Math.round(((dashboardData.revenue.fact || 0) / dashboardData.revenue.plan) * 100) : 0,
            '–û—Å—Ç–∞—Ç–æ–∫ (—Ä—É–±)': Math.max(0, (dashboardData?.revenue?.plan || 0) - (dashboardData?.revenue?.fact || 0))
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã',
            '–ü–ª–∞–Ω (—Ä—É–±)': dashboardData?.focus?.plan || 0,
            '–§–∞–∫—Ç (—Ä—É–±)': dashboardData?.focus?.fact || 0,
            '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (%)': dashboardData?.focus?.plan ? 
              Math.round(((dashboardData.focus.fact || 0) / dashboardData.focus.plan) * 100) : 0,
            '–û—Å—Ç–∞—Ç–æ–∫ (—Ä—É–±)': Math.max(0, (dashboardData?.focus?.plan || 0) - (dashboardData?.focus?.fact || 0))
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–°–ë–ü',
            '–ü–ª–∞–Ω (—Ä—É–±)': dashboardData?.sbp?.plan || 0,
            '–§–∞–∫—Ç (—Ä—É–±)': dashboardData?.sbp?.fact || 0,
            '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (%)': dashboardData?.sbp?.plan ? 
              Math.round(((dashboardData.sbp.fact || 0) / dashboardData.sbp.plan) * 100) : 0,
            '–û—Å—Ç–∞—Ç–æ–∫ (—Ä—É–±)': Math.max(0, (dashboardData?.sbp?.plan || 0) - (dashboardData?.sbp?.fact || 0))
          }
        ]
      },
      {
        name: '–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ',
        data: [
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è',
            '–°—É–º–º–∞ (—Ä—É–±)': todayStats?.total || 0,
            '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π': todayStats?.entries?.length || 0,
            '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫': todayStats?.entries?.length > 0 ? 
              Math.round((todayStats.total || 0) / todayStats.entries.length) : 0
          }
        ]
      }
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –∑–∞–ø–∏—Å—è–º, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (todayStats?.entries && todayStats.entries.length > 0) {
      sheets.push({
        name: '–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø–∏—Å–µ–π',
        data: todayStats.entries.map((entry, index) => ({
          '‚Ññ': index + 1,
          '–°–æ—Ç—Ä—É–¥–Ω–∏–∫': entry.employeeName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': entry.employeeId || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (—Ä—É–±)': parseInt(entry.focus) || 0,
          '–°–ë–ü (—Ä—É–±)': parseInt(entry.sbp) || 0,
          '–ù–∞–ª–∏—á–Ω—ã–µ (—Ä—É–±)': parseInt(entry.cash) || 0,
          '–û–±—â–∞—è —Å—É–º–º–∞ (—Ä—É–±)': (parseInt(entry.focus) || 0) + (parseInt(entry.sbp) || 0) + (parseInt(entry.cash) || 0),
          '–í—Ä–µ–º—è –≤–Ω–µ—Å–µ–Ω–∏—è': entry.timestamp ? new Date(entry.timestamp).toLocaleTimeString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        }))
      });
    }

    return this.exportToExcel(sheets, 'eps-dashboard');
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—ã—Ä—É—á–∫–µ
  exportRevenueData(revenueEntries, dateRange = null) {
    const sheets = [
      {
        name: '–î–∞–Ω–Ω—ã–µ –ø–æ –≤—ã—Ä—É—á–∫–µ',
        data: revenueEntries.map(entry => ({
          '–î–∞—Ç–∞': entry.date,
          '–°–æ—Ç—Ä—É–¥–Ω–∏–∫': entry.employeeName,
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': entry.employeeId,
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (—Ä—É–±)': parseInt(entry.focus) || 0,
          '–°–ë–ü (—Ä—É–±)': parseInt(entry.sbp) || 0,
          '–ù–∞–ª–∏—á–Ω—ã–µ (—Ä—É–±)': parseInt(entry.cash) || 0,
          '–û–±—â–∞—è —Å—É–º–º–∞ (—Ä—É–±)': (parseInt(entry.focus) || 0) + (parseInt(entry.sbp) || 0) + (parseInt(entry.cash) || 0),
          '–í—Ä–µ–º—è –≤–Ω–µ—Å–µ–Ω–∏—è': entry.timestamp ? new Date(entry.timestamp).toLocaleTimeString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
          '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏': entry.date ? new Date(entry.date).toLocaleDateString('ru-RU', { weekday: 'long' }) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        }))
      }
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –ø–æ –¥–Ω—è–º
    const dailySummary = {};
    revenueEntries.forEach(entry => {
      if (!entry.date) return;
      
      if (!dailySummary[entry.date]) {
        dailySummary[entry.date] = {
          date: entry.date,
          total: 0,
          focus: 0,
          sbp: 0,
          cash: 0,
          entries: 0
        };
      }
      dailySummary[entry.date].total += (parseInt(entry.focus) || 0) + (parseInt(entry.sbp) || 0) + (parseInt(entry.cash) || 0);
      dailySummary[entry.date].focus += parseInt(entry.focus) || 0;
      dailySummary[entry.date].sbp += parseInt(entry.sbp) || 0;
      dailySummary[entry.date].cash += parseInt(entry.cash) || 0;
      dailySummary[entry.date].entries++;
    });

    sheets.push({
      name: '–°–≤–æ–¥–∫–∞ –ø–æ –¥–Ω—è–º',
      data: Object.values(dailySummary)
        .sort((a, b) => new Date(a.date) - new Date(b.date))
        .map(day => ({
          '–î–∞—Ç–∞': day.date,
          '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏': day.date ? new Date(day.date).toLocaleDateString('ru-RU', { weekday: 'long' }) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
          '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ (—Ä—É–±)': day.total,
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (—Ä—É–±)': day.focus,
          '–°–ë–ü (—Ä—É–±)': day.sbp,
          '–ù–∞–ª–∏—á–Ω—ã–µ (—Ä—É–±)': day.cash,
          '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π': day.entries,
          '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ (—Ä—É–±)': day.entries > 0 ? Math.round(day.total / day.entries) : 0
        }))
    });

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
    const employeeSummary = {};
    revenueEntries.forEach(entry => {
      if (!entry.employeeId) return;
      
      if (!employeeSummary[entry.employeeId]) {
        employeeSummary[entry.employeeId] = {
          employeeId: entry.employeeId,
          employeeName: entry.employeeName,
          total: 0,
          focus: 0,
          sbp: 0,
          cash: 0,
          entries: 0,
          firstEntry: entry.date,
          lastEntry: entry.date
        };
      }
      employeeSummary[entry.employeeId].total += (parseInt(entry.focus) || 0) + (parseInt(entry.sbp) || 0) + (parseInt(entry.cash) || 0);
      employeeSummary[entry.employeeId].focus += parseInt(entry.focus) || 0;
      employeeSummary[entry.employeeId].sbp += parseInt(entry.sbp) || 0;
      employeeSummary[entry.employeeId].cash += parseInt(entry.cash) || 0;
      employeeSummary[entry.employeeId].entries++;
      
      if (entry.date) {
        if (new Date(entry.date) < new Date(employeeSummary[entry.employeeId].firstEntry)) {
          employeeSummary[entry.employeeId].firstEntry = entry.date;
        }
        if (new Date(entry.date) > new Date(employeeSummary[entry.employeeId].lastEntry)) {
          employeeSummary[entry.employeeId].lastEntry = entry.date;
        }
      }
    });

    sheets.push({
      name: '–°–≤–æ–¥–∫–∞ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º',
      data: Object.values(employeeSummary)
        .sort((a, b) => b.total - a.total)
        .map(emp => ({
          '–°–æ—Ç—Ä—É–¥–Ω–∏–∫': emp.employeeName,
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': emp.employeeId,
          '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ (—Ä—É–±)': emp.total,
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (—Ä—É–±)': emp.focus,
          '–°–ë–ü (—Ä—É–±)': emp.sbp,
          '–ù–∞–ª–∏—á–Ω—ã–µ (—Ä—É–±)': emp.cash,
          '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π': emp.entries,
          '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ (—Ä—É–±)': emp.entries > 0 ? Math.round(emp.total / emp.entries) : 0,
          '–ü–µ—Ä–≤—ã–π –≤–Ω–æ—Å': emp.firstEntry,
          '–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–Ω–æ—Å': emp.lastEntry,
          '–î–æ–ª—è —Ñ–æ–∫—É—Å–Ω—ã—Ö (%)': emp.total > 0 ? Math.round((emp.focus / emp.total) * 100) : 0,
          '–î–æ–ª—è –°–ë–ü (%)': emp.total > 0 ? Math.round((emp.sbp / emp.total) * 100) : 0
        }))
    });

    const filename = dateRange ? 
      `eps-revenue-${dateRange.start}-to-${dateRange.end}` : 
      'eps-revenue';

    return this.exportToExcel(sheets, filename);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  exportAdvancedAnalytics(analyticsData) {
    const { summary = {}, employeeStats = [], storeStats = [], dateRange = {} } = analyticsData;
    
    const sheets = [
      {
        name: '–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏',
        data: [
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': summary.totalRevenue || 0,
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '—Ä—É–±',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–°—É–º–º–∞—Ä–Ω–∞—è –≤—ã—Ä—É—á–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥'
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': summary.totalFocus || 0,
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '—Ä—É–±',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–í—ã—Ä—É—á–∫–∞ —Å —Ñ–æ–∫—É—Å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤'
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–°–ë–ü',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': summary.totalSBP || 0,
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '—Ä—É–±',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–í—ã—Ä—É—á–∫–∞ –ø–æ —Å–∏—Å—Ç–µ–º–µ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π'
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–ù–∞–ª–∏—á–Ω—ã–µ',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': summary.totalCash || 0,
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '—Ä—É–±',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–í—ã—Ä—É—á–∫–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏'
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–°—Ä–µ–¥–Ω—è—è –≤—ã—Ä—É—á–∫–∞ –≤ –¥–µ–Ω—å',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': Math.round(summary.averagePerDay || 0),
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '—Ä—É–±/–¥–µ–Ω—å',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–°—Ä–µ–¥–Ω–µ–¥–Ω–µ–≤–Ω–∞—è –≤—ã—Ä—É—á–∫–∞'
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': Math.round(summary.averagePlanCompletion || 0),
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '%',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–ª–∞–Ω–æ–≤'
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–î–Ω–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': summary.daysWithData || 0,
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '–¥–Ω–µ–π',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å –≤–Ω–µ—Å–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏'
          },
          {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': summary.entryCount || 0,
            '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': '–∑–∞–ø–∏—Å–µ–π',
            '–û–ø–∏—Å–∞–Ω–∏–µ': '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –æ –≤—ã—Ä—É—á–∫–µ'
          }
        ]
      }
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (employeeStats.length > 0) {
      sheets.push({
        name: '–¢–æ–ø —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
        data: employeeStats.map((employee, index) => ({
          '–ú–µ—Å—Ç–æ': index + 1,
          '–°–æ—Ç—Ä—É–¥–Ω–∏–∫': employee.name,
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': employee.id,
          '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ (—Ä—É–±)': employee.total,
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (—Ä—É–±)': employee.focus,
          '–°–ë–ü (—Ä—É–±)': employee.sbp,
          '–ù–∞–ª–∏—á–Ω—ã–µ (—Ä—É–±)': employee.cash,
          '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π': employee.entries,
          '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ (—Ä—É–±)': employee.entries > 0 ? Math.round(employee.total / employee.entries) : 0,
          '–î–æ–ª—è –æ—Ç –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏ (%)': summary.totalRevenue > 0 ? 
            Math.round((employee.total / summary.totalRevenue) * 100) : 0,
          '–ú–∞–≥–∞–∑–∏–Ω—ã': Array.isArray(employee.stores) ? employee.stores.join(', ') : ''
        }))
      });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (storeStats && storeStats.length > 0) {
      sheets.push({
        name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º',
        data: storeStats.map(store => ({
          '–ú–∞–≥–∞–∑–∏–Ω': store.store,
          '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ (—Ä—É–±)': store.total,
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (—Ä—É–±)': store.focus,
          '–°–ë–ü (—Ä—É–±)': store.sbp,
          '–ù–∞–ª–∏—á–Ω—ã–µ (—Ä—É–±)': store.cash,
          '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤': store.employeeCount,
          '–°—Ä–µ–¥–Ω—è—è –≤—ã—Ä—É—á–∫–∞ –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (—Ä—É–±)': Math.round(store.averagePerEmployee || 0),
          '–î–æ–ª—è –æ—Ç –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏ (%)': summary.totalRevenue > 0 ? 
            Math.round((store.total / summary.totalRevenue) * 100) : 0
        }))
      });
    }

    const filename = `eps-advanced-analytics-${dateRange.start || 'start'}-to-${dateRange.end || 'end'}`;
    return this.exportToExcel(sheets, filename);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
  exportCustomReport(reportData, reportConfig) {
    const sheets = [];

    // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
    if (reportData.main && Array.isArray(reportData.main)) {
      sheets.push({
        name: reportConfig.name || '–ö–∞—Å—Ç–æ–º–Ω—ã–π –æ—Ç—á–µ—Ç',
        data: reportData.main
      });
    }

    // –°–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (reportData.summary && Array.isArray(reportData.summary)) {
      sheets.push({
        name: '–°–≤–æ–¥–∫–∞',
        data: reportData.summary
      });
    }

    // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (reportData.details && Array.isArray(reportData.details)) {
      sheets.push({
        name: '–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è',
        data: reportData.details
      });
    }

    // –ú–µ—Ç—Ä–∏–∫–∏ –∏ KPI
    if (reportData.metrics && Array.isArray(reportData.metrics)) {
      sheets.push({
        name: '–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏',
        data: reportData.metrics.map(metric => ({
          '–ú–µ—Ç—Ä–∏–∫–∞': metric.name,
          '–ó–Ω–∞—á–µ–Ω–∏–µ': metric.value,
          '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è': metric.unit || '',
          '–ò–∑–º–µ–Ω–µ–Ω–∏–µ': metric.change || '',
          '–¢—Ä–µ–Ω–¥': metric.trend || ''
        }))
      });
    }

    const filename = `eps-custom-report-${reportConfig.name || 'report'}`;
    return this.exportToExcel(sheets, filename);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã
  exportAllData() {
    try {
      const allData = JSON.parse(localStorage.getItem('eps-analytics-data') || '{}');
      
      const sheets = [];

      // –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
      if (allData.employees && Array.isArray(allData.employees)) {
        sheets.push({
          name: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏',
          data: allData.employees.map(emp => ({
            'ID': emp.id,
            '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': emp.employeeId,
            '–§–ò–û': emp.name,
            '–¢–µ–ª–µ—Ñ–æ–Ω': emp.phone,
            'Telegram': emp.telegram,
            '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è': emp.birthDate,
            '–î–æ–ª–∂–Ω–æ—Å—Ç—å': emp.role,
            '–ú–∞–≥–∞–∑–∏–Ω—ã': Array.isArray(emp.stores) ? emp.stores.join(', ') : '',
            '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è': emp.createdAt ? new Date(emp.createdAt).toLocaleDateString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
          }))
        });
      }

      // –î–∞–Ω–Ω—ã–µ –ø–æ –≤—ã—Ä—É—á–∫–µ
      const revenueData = [];
      if (allData.revenueData && typeof allData.revenueData === 'object') {
        Object.entries(allData.revenueData).forEach(([date, entries]) => {
          if (Array.isArray(entries)) {
            entries.forEach(entry => {
              revenueData.push({
                '–î–∞—Ç–∞': date,
                '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': entry.employeeId,
                '–°–æ—Ç—Ä—É–¥–Ω–∏–∫': entry.employeeName,
                '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã': entry.focus,
                '–°–ë–ü': entry.sbp,
                '–ù–∞–ª–∏—á–Ω—ã–µ': entry.cash,
                '–û–±—â–∞—è —Å—É–º–º–∞': (parseInt(entry.focus) || 0) + (parseInt(entry.sbp) || 0) + (parseInt(entry.cash) || 0),
                '–í—Ä–µ–º—è –≤–Ω–µ—Å–µ–Ω–∏—è': entry.timestamp ? new Date(entry.timestamp).toLocaleString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
              });
            });
          }
        });
      }

      if (revenueData.length > 0) {
        sheets.push({
          name: '–î–∞–Ω–Ω—ã–µ –≤—ã—Ä—É—á–∫–∏',
          data: revenueData
        });
      }

      return this.exportToExcel(sheets, 'eps-full-backup');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
      return false;
    }
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  exportMotivationData() {
    try {
      const motivationData = JSON.parse(localStorage.getItem('eps-motivation-data') || '{}');
      
      const sheets = [];

      // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
      if (motivationData.achievements && Array.isArray(motivationData.achievements)) {
        sheets.push({
          name: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
          data: motivationData.achievements.map(achievement => ({
            'ID –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è': achievement.id,
            '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': achievement.employeeId,
            '–¢–∏–ø –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è': achievement.type,
            '–§–∞–∫—Ç (—Ä—É–±)': achievement.fact,
            '–ü–ª–∞–Ω (—Ä—É–±)': achievement.plan,
            '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (%)': achievement.percentage,
            '–ù–∞—á–∏—Å–ª–µ–Ω–æ –±–∞–ª–ª–æ–≤': achievement.points,
            '–î–∞—Ç–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è': achievement.date,
            '–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏': achievement.timestamp ? new Date(achievement.timestamp).toLocaleString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
          }))
        });
      }

      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
      if (motivationData.employees && typeof motivationData.employees === 'object') {
        const employeesData = Object.entries(motivationData.employees).map(([employeeId, stats]) => ({
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': employeeId,
          '–í—Å–µ–≥–æ –±–∞–ª–ª–æ–≤': stats.totalPoints,
          '–ë–∞–ª–ª–æ–≤ –∑–∞ –º–µ—Å—è—Ü': stats.monthlyPoints,
          '–í—Å–µ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π': stats.totalAchievements
        }));

        if (employeesData.length > 0) {
          sheets.push({
            name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–ª–ª–æ–≤',
            data: employeesData
          });
        }
      }

      return this.exportToExcel(sheets, 'eps-motivation-data');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
      return false;
    }
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
  generateTemplate(templateType) {
    const templates = {
      employees: [
        {
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': '12345',
          '–§–ò–û': '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
          '–¢–µ–ª–µ—Ñ–æ–Ω': '+7 (999) 123-45-67',
          'Telegram': '@ivanov',
          '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è': '15.03.1990',
          '–î–æ–ª–∂–Ω–æ—Å—Ç—å': '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
          '–ú–∞–≥–∞–∑–∏–Ω—ã': '–ï–†–° 2334'
        }
      ],
      plans: [
        {
          '–î–∞—Ç–∞': '2024-10-01',
          '–í—ã—Ä—É—á–∫–∞ (–ø–ª–∞–Ω)': 150000,
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–ø–ª–∞–Ω)': 50000,
          '–°–ë–ü (–ø–ª–∞–Ω)': 30000
        }
      ],
      revenue: [
        {
          '–î–∞—Ç–∞': '2024-10-01',
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': '12345',
          '–§–æ–∫—É—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã': 5000,
          '–°–ë–ü': 3000,
          '–ù–∞–ª–∏—á–Ω—ã–µ': 2000
        }
      ],
      schedule: [
        {
          '–î–∞—Ç–∞': '2024-10-01',
          '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä': '12345',
          '–ù–∞—á–∞–ª–æ —Å–º–µ–Ω—ã': '09:00',
          '–ö–æ–Ω–µ—Ü —Å–º–µ–Ω—ã': '18:00',
          '–¢–∏–ø —Å–º–µ–Ω—ã': 'work'
        }
      ]
    };

    const template = templates[templateType] || [];
    const sheets = [{
      name: '–®–∞–±–ª–æ–Ω',
      data: template
    }];

    return this.exportToExcel(sheets, `eps-${templateType}-template`);
  }

  // –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  formatCurrency(value) {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      minimumFractionDigits: 0
    }).format(value || 0);
  }

  formatDate(date) {
    return date ? new Date(date).toLocaleDateString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  }

  formatDateTime(date) {
    return date ? new Date(date).toLocaleString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
  getExportStats() {
    return {
      version: this.version,
      lastExport: localStorage.getItem('eps-last-export') || '–ù–∏–∫–æ–≥–¥–∞',
      totalExports: parseInt(localStorage.getItem('eps-total-exports') || '0'),
      supportedFormats: ['xlsx', 'csv (fallback)'],
      features: [
        '–ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Excel –∏ CSV',
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞',
        '–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ'
      ]
    };
  }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
export const exportService = new ExportService();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export { ExportService };