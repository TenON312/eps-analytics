class NotificationService {
  constructor() {
    this.permission = null;
    this.init();
  }

  async init() {
    if (!('Notification' in window)) {
      console.warn('–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      return;
    }

    this.permission = Notification.permission;
    
    if (this.permission === 'default') {
      this.permission = await this.requestPermission();
    }
  }

  async requestPermission() {
    try {
      const permission = await Notification.requestPermission();
      this.permission = permission;
      return permission;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:', error);
      return 'denied';
    }
  }

  showNotification(title, options = {}) {
    if (this.permission !== 'granted') {
      console.warn('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ');
      return null;
    }

    const notificationOptions = {
      icon: '/icon-192.png',
      badge: '/icon-72.png',
      vibrate: [200, 100, 200],
      ...options
    };

    const notification = new Notification(title, notificationOptions);
    
    notification.onclick = () => {
      window.focus();
      notification.close();
    };

    return notification;
  }

  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  showPlanCompletion(category, fact, plan) {
    return this.showNotification('üéâ –ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω!', {
      body: `${category}: ${fact.toLocaleString('ru-RU')} ‚ÇΩ –∏–∑ ${plan.toLocaleString('ru-RU')} ‚ÇΩ`,
      tag: 'plan-completion',
      requireInteraction: true
    });
  }

  showDataSaved(amount) {
    return this.showNotification('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', {
      body: `–í–Ω–µ—Å–µ–Ω–æ ${amount.toLocaleString('ru-RU')} ‚ÇΩ`,
      tag: 'data-saved'
    });
  }

  showOfflineWarning() {
    return this.showNotification('‚ö†Ô∏è –†–∞–±–æ—Ç–∞ –æ—Ñ–ª–∞–π–Ω', {
      body: '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ',
      tag: 'offline-warning'
    });
  }

  showOnlineSync() {
    return this.showNotification('üîó –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', {
      body: '–î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
      tag: 'online-sync'
    });
  }
}

export const notificationService = new NotificationService();